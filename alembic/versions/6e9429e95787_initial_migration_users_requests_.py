"""Initial migration: users, requests, reviews, verification

Revision ID: 6e9429e95787
Revises: 
Create Date: 2025-10-01 18:41:03.751084

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6e9429e95787'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('user_type', sa.Enum('INDIVIDUAL', 'VOLUNTEER', 'BUSINESS', 'ORGANIZATION', name='usertype'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_status', sa.Enum('PENDING', 'VERIFIED', 'REJECTED', 'EXPIRED', name='verificationstatus'), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('profile_image_url', sa.String(length=500), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=True),
    sa.Column('total_requests_completed', sa.Integer(), nullable=True),
    sa.Column('total_requests_received', sa.Integer(), nullable=True),
    sa.Column('total_verifications_performed', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('requester_id', sa.UUID(), nullable=False),
    sa.Column('volunteer_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('request_type', sa.Enum('PHYSICAL_LABOR', 'TECHNICAL_SUPPORT', 'TRANSPORTATION', 'COMPANIONSHIP', 'EDUCATION_TUTORING', 'FOOD_ASSISTANCE', 'HEALTHCARE_SUPPORT', 'HOME_REPAIRS', 'ADMINISTRATIVE', 'OTHER', name='requesttype'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='requestpriority'), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'MATCHED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'EXPIRED', name='requeststatus'), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('required_skills', sa.Text(), nullable=True),
    sa.Column('required_certifications', sa.Text(), nullable=True),
    sa.Column('estimated_duration_hours', sa.Float(), nullable=True),
    sa.Column('num_volunteers_needed', sa.Integer(), nullable=True),
    sa.Column('requested_start_date', sa.DateTime(), nullable=False),
    sa.Column('requested_end_date', sa.DateTime(), nullable=True),
    sa.Column('flexible_schedule', sa.Boolean(), nullable=True),
    sa.Column('matching_score', sa.Float(), nullable=True),
    sa.Column('matched_at', sa.DateTime(), nullable=True),
    sa.Column('is_anonymous', sa.Boolean(), nullable=True),
    sa.Column('share_contact_info', sa.Boolean(), nullable=True),
    sa.Column('workflow_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['volunteer_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_requests_id'), 'requests', ['id'], unique=False)
    op.create_index(op.f('ix_requests_requester_id'), 'requests', ['requester_id'], unique=False)
    op.create_index(op.f('ix_requests_volunteer_id'), 'requests', ['volunteer_id'], unique=False)
    op.create_index(op.f('ix_requests_workflow_id'), 'requests', ['workflow_id'], unique=False)
    op.create_table('verifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('verifier1_id', sa.UUID(), nullable=True),
    sa.Column('verifier2_id', sa.UUID(), nullable=True),
    sa.Column('verification_code', sa.String(length=255), nullable=True),
    sa.Column('id_document_hash', sa.String(length=255), nullable=True),
    sa.Column('verification_location', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'VERIFIED', 'REJECTED', 'EXPIRED', name='verificationstatus'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('temporal_workflow_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['verifier1_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['verifier2_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verifications_temporal_workflow_id'), 'verifications', ['temporal_workflow_id'], unique=False)
    op.create_index(op.f('ix_verifications_user_id'), 'verifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_verifications_verification_code'), 'verifications', ['verification_code'], unique=True)
    op.create_index(op.f('ix_verifications_verifier1_id'), 'verifications', ['verifier1_id'], unique=False)
    op.create_index(op.f('ix_verifications_verifier2_id'), 'verifications', ['verifier2_id'], unique=False)
    op.create_table('volunteer_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skills', sa.Text(), nullable=True),
    sa.Column('certifications', sa.Text(), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('availability_schedule', sa.Text(), nullable=True),
    sa.Column('max_distance_km', sa.Float(), nullable=True),
    sa.Column('preferred_request_types', sa.Text(), nullable=True),
    sa.Column('languages_spoken', sa.Text(), nullable=True),
    sa.Column('background_check_completed', sa.Boolean(), nullable=True),
    sa.Column('background_check_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('request_event_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('request_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('event_data', sa.Text(), nullable=True),
    sa.Column('actor_id', sa.UUID(), nullable=True),
    sa.Column('workflow_id', sa.String(length=255), nullable=True),
    sa.Column('activity_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_request_event_logs_created_at'), 'request_event_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_request_event_logs_event_type'), 'request_event_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_request_event_logs_request_id'), 'request_event_logs', ['request_id'], unique=False)
    op.create_index(op.f('ix_request_event_logs_workflow_id'), 'request_event_logs', ['workflow_id'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('request_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('reviewee_id', sa.UUID(), nullable=False),
    sa.Column('review_type', sa.Enum('REQUESTER_TO_VOLUNTEER', 'VOLUNTEER_TO_REQUESTER', name='reviewtype'), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('public_comment', sa.Text(), nullable=True),
    sa.Column('private_comment', sa.Text(), nullable=True),
    sa.Column('professionalism_rating', sa.Integer(), nullable=True),
    sa.Column('communication_rating', sa.Integer(), nullable=True),
    sa.Column('punctuality_rating', sa.Integer(), nullable=True),
    sa.Column('skill_rating', sa.Integer(), nullable=True),
    sa.Column('is_flagged', sa.Boolean(), nullable=True),
    sa.Column('flag_reason', sa.Text(), nullable=True),
    sa.Column('is_verified_review', sa.Boolean(), nullable=True),
    sa.Column('workflow_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reviewee_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reviews_created_at'), 'reviews', ['created_at'], unique=False)
    op.create_index(op.f('ix_reviews_id'), 'reviews', ['id'], unique=False)
    op.create_index(op.f('ix_reviews_request_id'), 'reviews', ['request_id'], unique=False)
    op.create_index(op.f('ix_reviews_reviewee_id'), 'reviews', ['reviewee_id'], unique=False)
    op.create_index(op.f('ix_reviews_reviewer_id'), 'reviews', ['reviewer_id'], unique=False)
    op.create_index(op.f('ix_reviews_workflow_id'), 'reviews', ['workflow_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reviews_workflow_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_reviewer_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_reviewee_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_request_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_created_at'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_request_event_logs_workflow_id'), table_name='request_event_logs')
    op.drop_index(op.f('ix_request_event_logs_request_id'), table_name='request_event_logs')
    op.drop_index(op.f('ix_request_event_logs_event_type'), table_name='request_event_logs')
    op.drop_index(op.f('ix_request_event_logs_created_at'), table_name='request_event_logs')
    op.drop_table('request_event_logs')
    op.drop_table('volunteer_profiles')
    op.drop_index(op.f('ix_verifications_verifier2_id'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_verifier1_id'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_verification_code'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_user_id'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_temporal_workflow_id'), table_name='verifications')
    op.drop_table('verifications')
    op.drop_index(op.f('ix_requests_workflow_id'), table_name='requests')
    op.drop_index(op.f('ix_requests_volunteer_id'), table_name='requests')
    op.drop_index(op.f('ix_requests_requester_id'), table_name='requests')
    op.drop_index(op.f('ix_requests_id'), table_name='requests')
    op.drop_table('requests')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
