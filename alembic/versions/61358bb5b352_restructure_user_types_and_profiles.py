"""restructure_user_types_and_profiles

Revision ID: 61358bb5b352
Revises: 6e9429e95787
Create Date: 2025-10-01 19:32:39.140588

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '61358bb5b352'
down_revision: Union[str, Sequence[str], None] = '6e9429e95787'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('business_name', sa.String(length=200), nullable=False),
    sa.Column('business_type', sa.String(length=100), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('services_offered', sa.Text(), nullable=True),
    sa.Column('resources_available', sa.Text(), nullable=True),
    sa.Column('business_hours', sa.Text(), nullable=True),
    sa.Column('service_area_radius_km', sa.Float(), nullable=True),
    sa.Column('business_license_verified', sa.Boolean(), nullable=True),
    sa.Column('insurance_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('individual_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skills', sa.Text(), nullable=True),
    sa.Column('interests', sa.Text(), nullable=True),
    sa.Column('availability_schedule', sa.Text(), nullable=True),
    sa.Column('max_distance_km', sa.Float(), nullable=True),
    sa.Column('preferred_assistance_types', sa.Text(), nullable=True),
    sa.Column('languages_spoken', sa.Text(), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=100), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('organization_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('organization_name', sa.String(length=200), nullable=False),
    sa.Column('organization_type', sa.String(length=100), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('mission_statement', sa.Text(), nullable=True),
    sa.Column('programs_offered', sa.Text(), nullable=True),
    sa.Column('service_areas', sa.Text(), nullable=True),
    sa.Column('staff_count', sa.Integer(), nullable=True),
    sa.Column('volunteer_capacity', sa.Integer(), nullable=True),
    sa.Column('nonprofit_status_verified', sa.Boolean(), nullable=True),
    sa.Column('accreditation', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.drop_table('volunteer_profiles')
    op.add_column('requests', sa.Column('acceptor_id', sa.UUID(), nullable=True))
    op.add_column('requests', sa.Column('participants_needed', sa.Integer(), nullable=True))
    op.drop_index(op.f('ix_requests_volunteer_id'), table_name='requests')
    op.create_index(op.f('ix_requests_acceptor_id'), 'requests', ['acceptor_id'], unique=False)
    op.drop_constraint(op.f('requests_volunteer_id_fkey'), 'requests', type_='foreignkey')
    op.create_foreign_key(None, 'requests', 'users', ['acceptor_id'], ['id'], ondelete='SET NULL')
    op.drop_column('requests', 'num_volunteers_needed')
    op.drop_column('requests', 'volunteer_id')
    op.drop_column('requests', 'required_certifications')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('requests', sa.Column('required_certifications', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('requests', sa.Column('volunteer_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('requests', sa.Column('num_volunteers_needed', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'requests', type_='foreignkey')
    op.create_foreign_key(op.f('requests_volunteer_id_fkey'), 'requests', 'users', ['volunteer_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_requests_acceptor_id'), table_name='requests')
    op.create_index(op.f('ix_requests_volunteer_id'), 'requests', ['volunteer_id'], unique=False)
    op.drop_column('requests', 'participants_needed')
    op.drop_column('requests', 'acceptor_id')
    op.create_table('volunteer_profiles',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('skills', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('certifications', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('experience_years', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('availability_schedule', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('max_distance_km', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('preferred_request_types', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('languages_spoken', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('background_check_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('background_check_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('volunteer_profiles_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('volunteer_profiles_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('volunteer_profiles_user_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('organization_profiles')
    op.drop_table('individual_profiles')
    op.drop_table('business_profiles')
    # ### end Alembic commands ###
