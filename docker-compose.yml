services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: nabr-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-nabr}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-nabr_db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-nabr}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Temporal Server
  temporal:
    image: temporalio/auto-setup:1.25.2
    container_name: nabr-temporal
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-nabr}
      - POSTGRES_PWD=${POSTGRES_PASSWORD:-changeme}
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=false
      - ES_SEEDS=
      - ES_VERSION=
      - SKIP_SCHEMA_SETUP=false
      - SKIP_DEFAULT_NAMESPACE_CREATION=false
    ports:
      - "7233:7233"  # gRPC endpoint
    volumes:
      - ./docker/temporal/dynamicconfig:/etc/temporal/config/dynamicconfig
    healthcheck:
      test: ["CMD", "tctl", "--address", "localhost:7233", "cluster", "health"]
      interval: 5s
      timeout: 5s
      retries: 30

  # Temporal Web UI
  temporal-web:
    image: temporalio/ui:2.32.0
    container_name: nabr-temporal-ui
    depends_on:
      temporal:
        condition: service_healthy
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    ports:
      - "8080:8080"

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: nabr-backend
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_healthy
    environment:
      - DEBUG=${DEBUG:-true}
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=${POSTGRES_USER:-nabr}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - POSTGRES_DB=${POSTGRES_DB:-nabr_db}
      - POSTGRES_PORT=5432
      - TEMPORAL_HOST=temporal:7233
      - TEMPORAL_NAMESPACE=${TEMPORAL_NAMESPACE:-default}
      - TEMPORAL_TASK_QUEUE=${TEMPORAL_TASK_QUEUE:-nabr-task-queue}
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data
    command: uvicorn nabr.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Temporal Worker
  worker:
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    container_name: nabr-worker
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_healthy
    environment:
      - DEBUG=${DEBUG:-true}
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=${POSTGRES_USER:-nabr}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - POSTGRES_DB=${POSTGRES_DB:-nabr_db}
      - POSTGRES_PORT=5432
      - TEMPORAL_HOST=temporal:7233
      - TEMPORAL_NAMESPACE=${TEMPORAL_NAMESPACE:-default}
      - TEMPORAL_TASK_QUEUE=${TEMPORAL_TASK_QUEUE:-nabr-task-queue}
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data
    command: python -m nabr.temporal.worker
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
